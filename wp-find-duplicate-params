#!/usr/bin/env perl

# Copyright Â© 2019 Jakub Wilk <jwilk@jwilk.net>
# SPDX-License-Identifier: MIT

no lib '.';  # CVE-2016-1238

## no critic (MatchVars)

use v5.10;
use strict;
use warnings;

use English;

my $first = 1;
my $go_on = 0;
my $section = '';
my $prev_section = '';

sub analyze
{
    local $_ = $MATCH;
    if (/^=/) {
        $section = $_;
        return $_;
    } elsif (s/([|]\s*)([\w-]+)(\s*=.*[|]\s*)(\2)(?=\s*=)/$1\e[91m$2\e[0m$3\e[91m$4\e[0m/s) {
        if ($section ne $prev_section) {
            $prev_section = $section;
            if ($section eq '') {
                $section = '==';
            }
            my $csection = $section;
            $first or print "\n";
            print "\e[97m$csection\e[0m\n\n";
            $first = 0;
        }
        print "$_\n";
        $first = 0;
    }
    $go_on = 1;
    return '';
}

if (scalar @ARGV == 0) {
    local $RS = undef;
    $_ = <STDIN>;
} elsif (scalar @ARGV == 1 and $ARGV[0] eq '-x') {
    $_ = qx(xclip -o -selection clipboard) or die;
} else {
    my $prog = $PROGRAM_NAME;
    $prog =~ s{^.*/}{};
    print {*STDERR} "Usage: $prog [-x]\n";
    exit 1;
}
while (s/^(=++)[^\n]+\1$|[{][{](?:[^{}]|[}][^}]|[{][^{])+[}][}]/analyze/mge and $go_on) {
    $section = '';
    $go_on = 0;
    next;
}

# vim:ts=4 sts=4 sw=4 et
